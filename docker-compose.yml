version: '3.7'

services:
  reverse-proxy:
    image: traefik:latest
    container_name: traefik
    security_opt:
      - no-new-privileges:true
    restart: always

    command: 
      - --api.insecure=true
      # - --api.secure=true
      - --log.level=DEBUG
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --providers.docker.watch=true
      - --providers.docker.useBindPortIP=true
      - --providers.docker.allowEmptyServices=true
      - --providers.docker.network=traefik

      # entrypoints configuration
      - --entrypoints.webinsecure.address=:80
      - --entrypoints.websecure.address=:443

    ports:
      # The HTTP port
      - 80:80
      - 443:443
      # The Web UI (enabled by --api.insecure=true)
      - 8080:8080

    labels:
      traefik.enable: true

      traefik.http.middlewares.test-compress.compress: true

      # attach the error middleware here
      # traefik.http.routers.traefik.middlewares: error-pages-middleware

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./grizzy-deploy.yml:/etc/traefik/grizzy-deploy.yml
    # environment:
    #   - "TRAEFIK_LOG_LEVEL=DEBUG"

    networks:
      - traefik

  grizzy-main:
    image: sololearner00262/grizzy-deploy-main:latest

    networks:
      - traefik

    labels:
      traefik.enable: true

      traefik.http.routers.grizzy-deploy.rule: Host(`deploy.localhost`)

  # not exposed to traefik but listens for events from cloudAMQP
  grizzy-consumer:
    image: sololearner00262/grizzy-deploy-consumer:latest

  nginx-error:
    image: nginx:latest
    volumes:
      - ./error-pages:/usr/share/nginx/error-pages
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

    networks:
      - traefik

    labels:
      traefik.enable: true
      
      traefik.http.routers.error-router.rule: HostRegexp(`{host:.+}`)
      traefik.http.routers.error-router.priority: 1
      traefik.http.routers.error-router.entrypoints: webinsecure
      traefik.http.routers.error-router.middlewares: error-pages-middleware

      # only handle 404 errors -- let the rest be handled by the guys hosting their stuff
      traefik.http.middlewares.error-pages-middleware.errors.status: 404
      traefik.http.middlewares.error-pages-middleware.errors.service: error-pages-service
      traefik.http.middlewares.error-pages-middleware.error.query: /{status}.html
      traefik.http.services.error-pages-service.loadbalancer.server.port: 80

networks:
  traefik:
    name: traefik